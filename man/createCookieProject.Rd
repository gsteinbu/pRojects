% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createCookieProject.R
\name{createCookieProject}
\alias{createCookieProject}
\title{Create an Cookiecutter data science project}
\source{
\url{https://drivendata.github.io/cookiecutter-data-science/}
}
\usage{
createCookieProject(name, title = NULL, folder = getwd(),
  packagedeps = "packrat", git = TRUE, reset = TRUE,
  external_setup = NULL)
}
\arguments{
\item{name}{Project}

\item{title}{"What the Project Does (One Line, Title Case)"
If NULL, a random one will be generated.}

\item{folder}{Folder under which to create the project}

\item{packagedeps}{Set a tool for package reproducibility}

\item{git}{Configure Git}

\item{reset}{whether to reset the project to current project}

\item{external_setup}{How to do the partly interactive setup
of online git, CI and coverage platforms. If NULL, no setup.
\itemize{
\item \code{git_service} Only "GitHub" is supported at the moment.
\item \code{login} username or organization name to use for the git service.
If NULL, no GitHub repo is created.
\item \code{private} whether to make the created repo private
\item \code{protocol} "ssh" or "https", protocol to use for GitHub
\item \code{ci_activation} Only NULL, and "travis" are supported at the moment.
"travis" means calling \code{usethis::use_travis()} and adding the Travis
badge to the README.
}}
}
\description{
Folder structure adopted from Cookiecutter data science.
}
\details{
├─ \strong{LICENSE}\cr
├─ \strong{makefile.R}       \emph{Makefile with commands like 'make(data)' or 'make(train)'.}\cr
├─ \strong{README.md}        \emph{The top-level README for developers using this project.}\cr
│\cr
├─ \strong{data}\cr
│  ├─ \strong{external}      \emph{Data from third party sources.}\cr
│  ├─ \strong{interim}       \emph{Intermediate data that has been transformed.}\cr
│  ├─ \strong{processed}     \emph{The final, canonical data sets for modeling.}\cr
│  └─ \strong{raw}           \emph{The original, immutable data dump.}\cr
│\cr
├─ \strong{packrat}          \emph{Default location for \link{packrat}.}\cr
├─ \strong{models}           \emph{Trained models, model predictions, or model summaries ('save()' or 'load()')}\cr
├─ \strong{notebooks}        \emph{R notebooks. Naming convention is a number (for ordering), the creator's initials, and a short '-' delimited description, e.g. '1.0-jqp-initial-data-exploration'.}\cr
├─ \strong{references}       \emph{Data dictionaries, manuals, and all other explanatory materials.}\cr
│\cr
├─ \strong{reports}          \emph{Generated analysis as HTML, PDF, LaTeX, etc.}\cr
│   └─ \strong{figures}      \emph{Generated graphics and figures to be used in reporting}\cr
│\cr
├─ \strong{R}                \emph{Source code for use in this project (e.g. functions).}\cr
│  ├─ \strong{data}          \emph{To download or generate data.}\cr
│  ├─ \strong{features}      \emph{To turn raw data into features for modeling.}\cr
│  ├─ \strong{models}        \emph{To train models and then use trained models to make predictions.}\cr
│  ├─ \strong{visualization} \emph{To create exploratory and results oriented visualizations.}\cr
│  └─ \strong{plans}         \emph{For plans from \link{drake}.}\cr
│\cr
└─ \strong{initialize.R}  \emph{Things to do when cloning the project.}\cr
}
\examples{
\dontrun{
folder <- tempdir()
createCookieProject(name = "doggos", title = "Counting cute dogs",
                    folder = folder,
                    packagedeps = "none",
                    git = TRUE, external_setup = NULL,
                    reset = TRUE)
list.files(file.path(folder, "doggos"))
unlink(file.path(folder, "doggos"))
}
}
